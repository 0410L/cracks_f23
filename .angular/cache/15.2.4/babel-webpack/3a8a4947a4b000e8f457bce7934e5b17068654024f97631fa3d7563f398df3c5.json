{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PlayersService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'data.json';\n    this.data = [];\n    this.getPlayers();\n  }\n  getPlayers() {\n    if (this.data.length < 1) {\n      this.http.get(this.url).subscribe(_data => this.data);\n    }\n  }\n  getPlayerOne(id) {\n    console.log();\n    if (this.data.length < 1) {\n      return this.data[0].players[id];\n    } else return null;\n  }\n}\nPlayersService.ɵfac = function PlayersService_Factory(t) {\n  return new (t || PlayersService)(i0.ɵɵinject(i1.HttpClient));\n};\nPlayersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PlayersService,\n  factory: PlayersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,cAAc;EAKzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,QAAG,GAAG,WAAW;IAClB,SAAI,GAAS,EAAE;IAGpB,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAU;IACR,IAAI,IAAI,CAACC,IAAI,CAACC,MAAM,GAAE,CAAC,EACvB;MAAC,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,IAAI,CAACC,GAAG,CAAC,CAACC,SAAS,CAAEC,KAAK,IAAG,IAAI,CAACL,IAAI,CAAC;;EACxD;EAEAM,YAAY,CAACC,EAAM;IACjBC,OAAO,CAACC,GAAG,EAAE;IACb,IAAI,IAAI,CAACT,IAAI,CAACC,MAAM,GAAE,CAAC,EAAC;MACxB,OAAO,IAAI,CAACD,IAAI,CAAC,CAAC,CAAC,CAACU,OAAO,CAACH,EAAE,CAAC;KAC9B,MAAM,OAAO,IAAI;EAEpB;;AApBWX,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAe,SAAdf,cAAc;EAAAgB,YAFb;AAAM","names":["PlayersService","constructor","http","getPlayers","data","length","get","url","subscribe","_data","getPlayerOne","id","console","log","players","factory","providedIn"],"sourceRoot":"","sources":["C:\\VUELING\\app_cracks\\src\\app\\players.service.ts"],"sourcesContent":["import { Injectable} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayersService {\n\n  private url = 'data.json';\n  public data : any[]=[];\n\n  constructor(private http: HttpClient) {\n    this.getPlayers()\n  }\n\n  getPlayers():void {\n    if (this.data.length <1)\n    {this.http.get(this.url).subscribe((_data)=>this.data)}\n  }\n\n  getPlayerOne(id:any){\n    console.log();\n    if (this.data.length <1){\n    return this.data[0].players[id];\n    } else return null;\n\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}